<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ischoolbar.programmer.dao.forum.TopicDao" >

  <!-- 主题基本结果集  -->
  <resultMap id="BaseResultMap" type="Topic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userId" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="click" property="click" jdbcType="INTEGER" />
    <result column="tabId" property="tabId" jdbcType="TINYINT" />
  </resultMap>

  <!-- 主题基本结果集+ 主题内容  用于主题详情-->
  <resultMap id="ResultMapWithBLOBs" type="Topic" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="filename" property="filename" jdbcType="VARCHAR" />
    <result column="filepath" property="filepath" jdbcType="LONGVARCHAR" />
  </resultMap>

  <!-- 主题和用户信息结果集 用于首页显示  -->
  <resultMap id="topicAndUserInfo" type="Topic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userId" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="click" property="click" jdbcType="INTEGER" />
    <result column="tabId" property="tabId" jdbcType="TINYINT" />
    <result column="count_replies" property="countReplies" jdbcType="INTEGER" />
    <association property="user" javaType="User">
      <id column="id" property="id" jdbcType="INTEGER" />
      <!-- <result column="username" property="username" jdbcType="VARCHAR" /> -->
      <result column="nickname" property="nickname" jdbcType="VARCHAR" />
      <result column="photo" property="photo" jdbcType="VARCHAR" /> 
    </association>
    <association property="tab" javaType="Tab">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="tabNameEn" property="tabNameEn" jdbcType="VARCHAR" />
      <result column="tabName" property="tabName" jdbcType="VARCHAR" />
    </association>
  </resultMap>

  <!-- 主题详情及用户必要信息 用于主题详情页  -->
  <resultMap id="topicAndUserDetail" type="Topic">
    <id column="id" property="id" />
    <result column="userId" property="userId"/>
    <result column="createTime" property="createTime"  />
    <result column="updateTime" property="updateTime" />
    <result column="title" property="title" />
    <result column="content" property="content"  />
    <result column="filename" property="filename"/>
    <result column="filepath" property="filepath"/>
    <result column="click" property="click"  />
    <result column="tabId" property="tabId" />
    <association property="user" javaType="User">
      <id column="id" property="id" />
      <!-- <result column="username" property="username"  /> -->
      <result column="nickname" property="nickname"/>
      <result column="photo" property="photo" /> 
    </association>
  </resultMap>

  <!-- 最多评论主题列表 -->
  <resultMap id="mostCommentsTopic" type="Topic">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="count_replies" property="countReplies" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
  </resultMap>
  <!-- 后台管理页面联合查询 -->
  <resultMap type="Topic" id="topicMap">
		<id column="t_id" property="id" />
		<result column="t_tabId" property="tabId" />
		<result column="t_title" property="title" />
		<result column="t_createTime" property="createTime" />
		<result column="t_userId" property="userId" />
		<result column="t_filename" property="filename"/>
	    <result column="t_filepath" property="filepath"/>
	    <result column="t_click" property="click"  />
	    <result column="t_tabId" property="tabId" />
		<association property="tab" javaType="Tab">
			<id column="tb_id" property="id" />
			<result column="tb_tabName" property="tabName" />
		</association>
		<association property="user" javaType="User">
			<id column="u_id" property="id" />
			<result column="u_nickname" property="nickname" />
		</association>
	</resultMap>
  
  <sql id="Base_Column_List" >
    id, userId, createTime, updateTime, title, click, tabId
  </sql>

  <sql id="Blob_Column_List" >
    content
  </sql>

  <select id="listTopicsAndUsers" resultMap="topicAndUserInfo" >
    select topic.id,topic.userId,topic.createTime,topic.updateTime,topic.title,topic.click,topic.tabId,user.nickname,user.photo ,
    tab.tabNameEn,tab.tabName,count(reply.id) as count_replies from topic LEFT JOIN user on  topic.userId = user.id
	LEFT JOIN tab on tab.id=topic.tabId LEFT JOIN reply on topic.id=reply.topic_id
	group by topic.id order by topic.id desc ;
	<if test="userId != null">
		and topic.userId = #{userId}   
	</if>
	<if test="offset != null and pageSize != null">
		limit #{offset},#{pageSize}
	</if>
  </select>

  <select id="listTopicsAndUsersOfTab" parameterType="java.lang.Integer" resultMap="topicAndUserInfo" >
   select topic.id,topic.userId,topic.createTime,topic.updateTime,topic.title,topic.click,topic.tabId,user.nickname,user.photo ,
    tab.tabName,count(reply.id) as count_replies from topic LEFT JOIN user on  topic.userId = user.id
	LEFT JOIN tab on tab.id=topic.tabId  LEFT JOIN reply on topic.id=reply.topic_id where tab.id = #{id,jdbcType=INTEGER}
	group by topic.id order by topic.id desc ;
	
  </select>

  <select id="selectById" parameterType="java.lang.Integer" resultMap="topicAndUserDetail">
      SELECT topic.*,user.nickname,user.photo from topic,user where topic.userId = user.id and topic.id = #{id,jdbcType=INTEGER};
  </select>



  <select id="getAllTopics" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from topic
    ORDER BY id DESC
  </select>

  <select id="getTopicsNum" resultType="java.lang.Integer" >
    select
    COUNT(*)
    from topic
  </select>

  <select id="listMostCommentsTopics" resultMap="mostCommentsTopic">
    SELECT topic.id,topic.title,count(reply.id) as count_replies  from topic ,reply  where topic.id = reply.topic_id group by topic.id order by count_replies desc limit 5;
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from topic
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="Topic" >
    insert into topic (userId, createTime,
      updateTime, title,
      tabId, content, filename,filepath)
    values ( #{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR},
      #{tabId,jdbcType=TINYINT}, #{content,jdbcType=LONGVARCHAR}, #{filename,jdbcType=VARCHAR},#{filepath,jdbcType=LONGVARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="Topic" >
    insert into topic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="click != null" >
        click,
      </if>
      <if test="tabId != null" >
        tabId,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="click != null" >
        #{click,jdbcType=INTEGER},
      </if>
      <if test="tabId != null" >
        #{tabId,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="Topic" >
    update topic
    <set >
      <if test="userId != null" >
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="click != null" >
        click = #{click,jdbcType=INTEGER},
      </if>
      <if test="tabId != null" >
        tabId = #{tabId,jdbcType=TINYINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKeyWithBLOBs" parameterType="Topic" >
    update topic
    set userId = #{userId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      click = #{click,jdbcType=INTEGER},
      tabId = #{tabId,jdbcType=TINYINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Topic" >
    update topic
    set userId = #{userId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      click = #{click,jdbcType=INTEGER},
      tabId = #{tabId,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="clickAddOne" parameterType="java.lang.Integer" >
    update topic
    set
    click = click+1
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 删除帖子 -->
	<delete id="delete" parameterType="String">
		delete from topic where id in(${value})  
	</delete>
	<!-- 分页获取帖子列表 -->
	<select id="findList" parameterType="Map" resultMap="topicMap">
		select t.id as t_id,t.tabId as t_tabId,t.title as t_title,t.userId as t_userId,t.createTime as t_createTime,
		tb.id as tb_id,tb.tabName as tb_tabName,
		u.id as u_id,u.nickname as u_nickname 
		from topic t,tab tb ,user u where t.tabId = tb.id  
		<if test="userId != null">
			and t.userId = #{userId} 
		</if>
		<if test="title != null">
			and t.title like '%${title}%' 
		</if>
		<if test="nickname != null">
			and u.nickname like '%${nickname}%' 
		</if>
		<if test="tabId != null">
			and t.tabId = #{tabId}  
		</if>
		order by t.createTime desc 
		<if test="offset != null and pageSize != null">
			limit ${offset},${pageSize}
		</if>
	</select>
  
  <!-- 获取符合结果的总记录数 -->
	<select id="getTotal" parameterType="Map" resultType="Integer">
		select count(*) from topic where 1 = 1 
		<if test="title != null">
			and title like '%${title}%' 
		</if>
		<if test="userId != null">
			and userId = #{userId}
		</if>
		<if test="tabId != null">
			and tabId = #{tabId}  
		</if>
	</select>
	<!-- 根据id查询 -->
	<select id="findById" parameterType="Long" resultType="Topic">
		select * from topic where id = #{value}
	</select>

</mapper>